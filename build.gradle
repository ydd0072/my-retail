buildscript {
	repositories {
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:2.1.3.RELEASE"
		classpath("org.asciidoctor:asciidoctor-gradle-plugin:1.5.3")
	}
}

plugins {
	id 'groovy'
	id "com.github.michaelruocco.gradle-postman-runner" version "0.1.0"
	id "org.asciidoctor.convert" version "1.5.9.2"
}

apply plugin: "org.springframework.boot"
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.asciidoctor.convert'

dependencyManagement {
	imports {
		mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
	}
	applyMavenExclusions = false
}

version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

ext {
	snippetsDir = file('build/generated-snippets')
}

repositories {
	mavenCentral()
}

dependencies {
	annotationProcessor 'org.projectlombok:lombok'
	compile 'org.springframework.boot:spring-boot-starter-actuator'
	compile 'com.github.ben-manes.caffeine:caffeine'
	compile('org.springframework.boot:spring-boot-starter-hateoas')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('joda-time:joda-time:2.10')
	compile('org.apache.commons:commons-lang3:3.8.1')
	compile('io.springfox:springfox-swagger2:2.9.2')
	compile('io.springfox:springfox-swagger-ui:2.9.2')
	compile('org.apache.httpcomponents:httpclient')
	compile('io.micrometer:micrometer-registry-prometheus')
	asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	compileOnly 'org.projectlombok:lombok'
	compileOnly("org.projectlombok:lombok:1.16.10")
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
	testCompile('org.spockframework:spock-core:1.1-groovy-2.4')
	testCompile('org.spockframework:spock-spring:1.1-groovy-2.4')
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

ext {
	buildTime = new Date().format("yyyyMMddHHmm")
	snippetsDir = file('build/generated-snippets')
}

test {
	outputs.dir snippetsDir
}

asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}

bootJar {
	dependsOn asciidoctor
	from ("${asciidoctor.outputDir}/html5") {
		into 'static/docs'
	}
}

asciidoctor {
	dependsOn test
	inputs.dir snippetsDir
	sourceDir = file('src/docs')
	separateOutputDirs = false
	attributes 'snippets': snippetsDir
}

build.dependsOn asciidoctor
